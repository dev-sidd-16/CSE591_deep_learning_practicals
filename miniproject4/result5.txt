Couldn't import dot_parser, loading of dot files will not be possible.
. Initializing the network
.. Adding input layer input
.. Adding dot_product layer dot_product_1
.. Adding flatten layer 2
.. Adding dot_product layer dot_product_2
.. Adding classifier layer softmax
.. Adding objective layer nil
.. This method will be deprecated with the implementation of a visualizer,also this works only for tree-like networks. This will cause errors in printing DAG-style networks.
 |-
 |-
 |-
 |- id: input
 |-=================------------------
 |- type: input
 |- output shape: (500, 3, 32, 32)
 |------------------------------------
          |-
          |-
          |-
          |- id: 2
          |-=================------------------
          |- type: flatten
          |- output shape: (500, 3072)
          |------------------------------------
                   |-
                   |-
                   |-
                   |- id: dot_product_1
                   |-=================------------------
                   |- type: dot_product
                   |- output shape: (500, 800)
                   |------------------------------------
                            |-
                            |-
                            |-
                            |- id: dot_product_2
                            |-=================------------------
                            |- type: dot_product
                            |- output shape: (500, 800)
                            |------------------------------------
                                     |-
                                     |-
                                     |-
                                     |- id: softmax
                                     |-=================------------------
                                     |- type: classifier
                                     |- output shape: (500, 10)
                                     |------------------------------------
                                              |-
                                              |-
                                              |-
                                              |- id: nil
                                              |-=================------------------
                                              |- type: objective
                                              |- output shape: (1,)
                                              |------------------------------------
.. Setting up the optimizer
.. Cooking the network
.. Setting up the visualizer
.. Setting up the resultor
. Training
. 

.. Epoch: 0 Era: 0
.. Cost                : 1.85527
.. Validation accuracy : 51.5628571429
.. Training accuracy : 48.8596428571
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 1.85527
. 

.. Epoch: 1 Era: 0
.. Cost                : 1.28125
.. Cost                : 1.28125
. 

.. Epoch: 2 Era: 0
.. Cost                : 0.994689
.. Validation accuracy : 76.8642857143
.. Training accuracy : 73.115
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.994689
. 

.. Epoch: 3 Era: 0
.. Cost                : 0.860247
.. Cost                : 0.860247
. 

.. Epoch: 4 Era: 0
.. Cost                : 0.802457
.. Validation accuracy : 79.5835714286
.. Training accuracy : 76.4732142857
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.802457
. 

.. Epoch: 5 Era: 0
.. Cost                : 0.753527
.. Cost                : 0.753527
. 

.. Epoch: 6 Era: 0
.. Cost                : 0.718481
.. Validation accuracy : 81.8928571429
.. Training accuracy : 78.9639285714
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.718481
. 

.. Epoch: 7 Era: 0
.. Cost                : 0.689983
.. Cost                : 0.689983
. 

.. Epoch: 8 Era: 0
.. Cost                : 0.661073
.. Validation accuracy : 84.1857142857
.. Training accuracy : 81.0825
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.661073
. 

.. Epoch: 9 Era: 0
.. Cost                : 0.6364
.. Cost                : 0.6364
. 

.. Epoch: 10 Era: 0
.. Cost                : 0.613905
.. Validation accuracy : 85.2628571429
.. Training accuracy : 82.2775
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.613905
. 

.. Epoch: 11 Era: 0
.. Cost                : 0.597323
.. Cost                : 0.597323
. 

.. Epoch: 12 Era: 0
.. Cost                : 0.583536
.. Validation accuracy : 85.1492857143
.. Training accuracy : 82.2185714286
.. Cost                : 0.583536
. 

.. Epoch: 13 Era: 0
.. Cost                : 0.572968
.. Cost                : 0.572968
. 

.. Epoch: 14 Era: 0
.. Cost                : 0.565169
.. Validation accuracy : 86.4314285714
.. Training accuracy : 83.6217857143
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.565169
. 

.. Epoch: 15 Era: 1
.. Cost                : 0.507653
.. Cost                : 0.507653
. 

.. Epoch: 16 Era: 1
.. Cost                : 0.497325
.. Validation accuracy : 87.965
.. Training accuracy : 85.38
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.497325
. 

.. Epoch: 17 Era: 1
.. Cost                : 0.492947
.. Cost                : 0.492947
. 

.. Epoch: 18 Era: 1
.. Cost                : 0.489776
.. Validation accuracy : 88.0928571429
.. Training accuracy : 85.5685714286
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.489776
. 

.. Epoch: 19 Era: 1
.. Cost                : 0.487146
.. Cost                : 0.487146
. 

.. Epoch: 20 Era: 1
.. Cost                : 0.484185
.. Validation accuracy : 88.1878571429
.. Training accuracy : 85.7575
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.484185
. 

.. Epoch: 21 Era: 1
.. Cost                : 0.481417
.. Cost                : 0.481417
. 

.. Epoch: 22 Era: 1
.. Cost                : 0.478896
.. Validation accuracy : 88.3657142857
.. Training accuracy : 85.9214285714
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.478896
. 

.. Epoch: 23 Era: 1
.. Cost                : 0.476355
.. Cost                : 0.476355
. 

.. Epoch: 24 Era: 1
.. Cost                : 0.473805
.. Validation accuracy : 88.4921428571
.. Training accuracy : 86.1235714286
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.473805
. 

.. Epoch: 25 Era: 1
.. Cost                : 0.471376
.. Cost                : 0.471376
. 

.. Epoch: 26 Era: 1
.. Cost                : 0.469074
.. Validation accuracy : 88.6085714286
.. Training accuracy : 86.3146428571
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.469074
. 

.. Epoch: 27 Era: 1
.. Cost                : 0.466939
.. Cost                : 0.466939
. 

.. Epoch: 28 Era: 1
.. Cost                : 0.464906
.. Validation accuracy : 88.6835714286
.. Training accuracy : 86.4878571429
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.464906
. 

.. Epoch: 29 Era: 1
.. Cost                : 0.462706
.. Cost                : 0.462706
.. Training complete.Took 36.9824321167 minutes
.. Testing
.. Testing accuracy : 88.4814285714
------------------ nesterov-rmsprop (0.01, 0.001, 0.0001) ------------------
================================================
