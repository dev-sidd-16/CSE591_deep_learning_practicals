. Initializing the network
.. Adding input layer input
.. Adding conv_pool layer conv_pool_1
.. Adding conv_pool layer conv_pool_2
.. Adding conv_pool layer conv_pool_3
.. Adding dot_product layer dot_product_1
.. Adding flatten layer 5
.. Adding dot_product layer dot_product_2
.. Adding classifier layer softmax
.. Adding objective layer nil
.. This method will be deprecated with the implementation of a visualizer,also this works only for tree-like networks. This will cause errors in printing DAG-style networks.
 |-
 |-
 |-
 |- id: input
 |-=================------------------
 |- type: input
 |- output shape: (500, 3, 32, 32)
 |------------------------------------
          |-
          |-
          |-
          |- id: conv_pool_1
          |-=================------------------
          |- type: conv_pool
          |- output shape: (500, 60, 14, 14)
          |------------------------------------
          |- filter size [5 X 5]
          |- pooling size [2 X 2]
          |- stride size [1 X 1]
          |- input shape [32 32]
          |- input number of feature maps is 3
          |------------------------------------
                   |-
                   |-
                   |-
                   |- id: conv_pool_2
                   |-=================------------------
                   |- type: conv_pool
                   |- output shape: (500, 150, 6, 6)
                   |------------------------------------
                   |- filter size [3 X 3]
                   |- pooling size [2 X 2]
                   |- stride size [1 X 1]
                   |- input shape [14 14]
                   |- input number of feature maps is 60
                   |------------------------------------
                            |-
                            |-
                            |-
                            |- id: conv_pool_3
                            |-=================------------------
                            |- type: conv_pool
                            |- output shape: (500, 270, 2, 2)
                            |------------------------------------
                            |- filter size [3 X 3]
                            |- pooling size [2 X 2]
                            |- stride size [1 X 1]
                            |- input shape [6 6]
                            |- input number of feature maps is 150
                            |------------------------------------
                                     |-
                                     |-
                                     |-
                                     |- id: 5
                                     |-=================------------------
                                     |- type: flatten
                                     |- output shape: (500, 1080)
                                     |------------------------------------
                                              |-
                                              |-
                                              |-
                                              |- id: dot_product_1
                                              |-=================------------------
                                              |- type: dot_product
                                              |- output shape: (500, 800)
                                              |------------------------------------
                                                       |-
                                                       |-
                                                       |-
                                                       |- id: dot_product_2
                                                       |-=================------------------
                                                       |- type: dot_product
                                                       |- output shape: (500, 800)
                                                       |------------------------------------
                                                                |-
                                                                |-
                                                                |-
                                                                |- id: softmax
                                                                |-=================------------------
                                                                |- type: classifier
                                                                |- output shape: (500, 10)
                                                                |------------------------------------
                                                                         |-
                                                                         |-
                                                                         |-
                                                                         |- id: nil
                                                                         |-=================------------------
                                                                         |- type: objective
                                                                         |- output shape: (1,)
                                                                         |------------------------------------
.. Setting up the optimizer
.. Cooking the network
.. Setting up the visualizer
.. Setting up the resultor
. Training
. 

.. Epoch: 0 Era: 0
.. Cost                : 0.418291
.. Validation accuracy : 95.1778571429
.. Training accuracy : 93.4732142857
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.418291
. 

.. Epoch: 1 Era: 0
.. Cost                : 0.172654
.. Cost                : 0.172654
. 

.. Epoch: 2 Era: 0
.. Cost                : 0.123107
.. Validation accuracy : 96.8814285714
.. Training accuracy : 96.2717857143
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.123107
. 

.. Epoch: 3 Era: 0
.. Cost                : 0.0930885
.. Cost                : 0.0930885
. 

.. Epoch: 4 Era: 0
.. Cost                : 0.0707323
.. Validation accuracy : 97.2885714286
.. Training accuracy : 97.7028571429
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.0707323
. 

.. Epoch: 5 Era: 1
.. Cost                : 0.050395
.. Cost                : 0.050395
. 

.. Epoch: 6 Era: 1
.. Cost                : 0.0348416
.. Validation accuracy : 97.6921428571
.. Training accuracy : 99.0689285714
.. Best training accuracy
.. Best validation accuracy
.. Cost                : 0.0348416
. 

.. Epoch: 7 Era: 1
.. Cost                : 0.0274742
.. Cost                : 0.0274742
. 

.. Epoch: 8 Era: 1
.. Cost                : 0.0221109
.. Validation accuracy : 97.6542857143
.. Training accuracy : 99.3735714286
.. Best training accuracy
.. Cost                : 0.0221109
. 

.. Epoch: 9 Era: 1
.. Cost                : 0.0178751
.. Cost                : 0.0178751
.. Training complete.Took 63.5445229833 minutes
.. Testing
.. Testing accuracy : 97.5428571429
------------------ 3 nesterov-rmsprop (0.01, 0.001, 0.0001) ------------------
================================================
